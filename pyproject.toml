# https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html
[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name="gdevsim"
description="GDSFactory interface to DEVSIM + utilities + models"
classifiers = [
	"Programming Language :: Python :: 3.10",
	"Programming Language :: Python :: 3.11",
	"Operating System :: OS Independent",
]
version="0.0.1"
authors = [
    {name = "simbilod", email = "sb30@princeton.edu"},
]
keywords = ["python"]
license = {file = "LICENSE"}
dependencies = [
    "numpy",
    "mkl",
    "devsim<",
    "matplotlib",
    "gdsfactory<7.22.2",
    "gplugins<0.11.0",
    "dill",
    "pyvista",
    "meshwell"
]
readme = "README.md"
requires-python = "<3.12"

[project.optional-dependencies]
dev = [
    "pre-commit",
    "pytest",
    "pytest-cov",
    "pytest_regressions",
    ]
docs = [
    "jupytext",
    "ipykernel",
    "autodoc_pydantic",
    "matplotlib",
    "jupyter-book==0.15.1",
    "sphinx-click",
    "ray",
    "seaborn",
    "numpy",
    "pandas",
    ]


[tool.setuptools.packages]
find = {}

# [project.scripts]
# gdevsim = "gdevsim.cli:cli"

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
exclude = '''  # Specify the files/dirs that should be ignored by the black formatter
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | env
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
testpaths = ["gdevsim/", "tests"]
# addopts = --tb=no
addopts = '--tb=short'
python_files = ["gdevsim/*.py", "notebooks/*.ipynb", "tests/*.py"]
norecursedirs = ["extra/*.py"]

[tool.mypy]
python_version = "3.10"
strict = true

[tool.pylsp-mypy]
enabled = true
live_mode = true
strict = true

[tool.setuptools.package-data]
mypkg = ["*.csv", "*.yaml"]

[tool.codespell]
ignore-words-list = "te, te/tm, te, ba, fpr, fpr_spacing, ro, nd, donot, schem"

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff]
fix = true
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "UP",
    "I001"
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "B905",  # `zip()` without an explicit `strict=` parameter
    "C408",  # C408 Unnecessary `dict` call (rewrite as a literal)
]

[tool.tbump]
# Uncomment this if your project is hosted on GitHub:
# github_url = "https://github.com/<user or organization>/<project>/"

[tool.tbump.version]
current = "0.0.1"

# Example of a semver regexp.
# Make sure this matches current_version before
# using tbump
regex = '''
  (?P<major>\d+)
  \.
  (?P<minor>\d+)
  \.
  (?P<patch>\d+)
  '''

[tool.tbump.git]
message_template = "Bump to {new_version}"
tag_template = "v{new_version}"

# For each file to patch, add a [[file]] config
# section containing the path of the file, relative to the
# tbump.toml location.
[[tool.tbump.file]]
src = "README.md"

[[tool.tbump.file]]
src = "pyproject.toml"

[[tool.tbump.file]]
src = "gdevsim/__init__.py"

[tool.towncrier]
directory = ".changelog.d"
filename = "CHANGELOG.md"
issue_format = "[#{issue}](https://github.com/gdsfactory/gdevsim/issues/{issue})"
start_string = "<!-- towncrier release notes start -->\n"
template = ".changelog.d/changelog_template.jinja"
title_format = "## [{version}]https://github.com/gdsfactory/gdevsim/releases/tag/v{version}) - {project_date}"
underlines = ["", "", ""]

[[tool.towncrier.type]]
directory = "security"
name = "Security"
showcontent = true

[[tool.towncrier.type]]
directory = "removed"
name = "Removed"
showcontent = true

[[tool.towncrier.type]]
directory = "deprecated"
name = "Deprecated"
showcontent = true

[[tool.towncrier.type]]
directory = "added"
name = "Added"
showcontent = true

[[tool.towncrier.type]]
directory = "changed"
name = "Changed"
showcontent = true

[[tool.towncrier.type]]
directory = "fixed"
name = "Fixed"
showcontent = true
